["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ ","~$clog","~$debux.cs.core","~$dbgn","^4","~$dbg","^4","~$dbg-last","^4","~$clogn","^4","~$break","^4"],"~:excludes",["~#set",[]],"~:name","~$examples.dbg","~:imports",null,"~:requires",["^ ","~$d","^4","^4","^4"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$my-fun",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/philos/work/all/philos/debux-stubs/examples/src/cljs/examples/dbg.cljs","~:line",21,"~:column",7,"~:end-line",21,"~:end-column",13,"~:arglists",["~#list",["~$quote",["^L",[["~$a",["^ ","~:keys",["~$b","~$c","~$d"],"~:or",["^ ","~$d",10,"~$b",20,"~$c",30]],["~$e","~$f","~$g","~$&","~$h"]]]]]]],"^<","~$examples.dbg/my-fun","~:variadic",false,"^F","src/cljs/examples/dbg.cljs","^J",13,"~:method-params",["^L",[["~$a","~$p__23003","~$p__23004"]]],"~:protocol-impl",null,"~:arglists-meta",["^L",[null,null]],"^H",1,"^G",21,"^I",21,"~:max-fixed-arity",3,"~:fn-var",true,"^K",["^L",["^M",["^L",[["~$a",["^ ","^N",["~$b","~$c","~$d"],"^O",["^ ","~$d",10,"~$b",20,"~$c",30]],["~$e","~$f","~$g","~$&","~$h"]]]]]]],"~$five",["^ ","^<","~$examples.dbg/five","^F","src/cljs/examples/dbg.cljs","^G",41,"^H",1,"^I",41,"^J",10,"^E",["^ ","^F","/home/philos/work/all/philos/debux-stubs/examples/src/cljs/examples/dbg.cljs","^G",41,"^H",6,"^I",41,"^J",10],"~:tag","~$number"],"~$c",["^ ","^<","~$examples.dbg/c","^F","src/cljs/examples/dbg.cljs","^G",105,"^H",1,"^I",105,"^J",7,"^E",["^ ","^F","/home/philos/work/all/philos/debux-stubs/examples/src/cljs/examples/dbg.cljs","^G",105,"^H",6,"^I",105,"^J",7],"^[","~$any"]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","~$d","^4","^4","^4"],"~:cljs.analyzer/constants",["^ ","~:seen",["^;",["~:y","~:c","~:b","~:d","~:x","~:a"]],"~:order",["~:b","~:c","~:d","~:a","~:y","~:x"]],"~:doc",null]