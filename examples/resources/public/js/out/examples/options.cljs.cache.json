["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ ","~$clog","~$debux.cs.core","~$dbgn","^4","~$dbg","^4","~$clogn","^4","~$break","^4"],"~:excludes",["~#set",[]],"~:name","~$examples.options","~:imports",null,"~:requires",["^ ","~$d","^4","^4","^4"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$a",["^ ","^;","~$examples.options/a","~:file","src/cljs/examples/options.cljs","~:line",51,"~:column",1,"~:end-line",51,"~:end-column",7,"~:meta",["^ ","^C","/home/philos/work/all/philos/debux-stubs/examples/src/cljs/examples/options.cljs","^D",51,"^E",6,"^F",51,"^G",7],"~:tag","~$any"],"~$my-fun2",["^ ","~:protocol-inline",null,"^H",["^ ","^C","/home/philos/work/all/philos/debux-stubs/examples/src/cljs/examples/options.cljs","^D",88,"^E",7,"^F",88,"^G",14,"~:arglists",["~#list",["~$quote",["^N",[["~$a",["^ ","~:keys",["~$b","~$c","~$d"],"~:or",["^ ","~$d",10,"~$b",20,"~$c",30]],["~$e","~$f","~$g","~$&","~$h"]]]]]]],"^;","~$examples.options/my-fun2","~:variadic",false,"^C","src/cljs/examples/options.cljs","^G",14,"~:method-params",["^N",[["~$a","~$p__19692","~$p__19693"]]],"~:protocol-impl",null,"~:arglists-meta",["^N",[null,null]],"^E",1,"^D",88,"^F",88,"~:max-fixed-arity",3,"~:fn-var",true,"^M",["^N",["^O",["^N",[["~$a",["^ ","^P",["~$b","~$c","~$d"],"^Q",["^ ","~$d",10,"~$b",20,"~$c",30]],["~$e","~$f","~$g","~$&","~$h"]]]]]]],"~$my-fun3",["^ ","^L",null,"^H",["^ ","^C","/home/philos/work/all/philos/debux-stubs/examples/src/cljs/examples/options.cljs","^D",99,"^E",7,"^F",99,"^G",14,"^M",["^N",["^O",["^N",[[]]]]]],"^;","~$examples.options/my-fun3","^S",false,"^C","src/cljs/examples/options.cljs","^G",14,"^T",["^N",[[]]],"^W",null,"^X",["^N",[null,null]],"^E",1,"^D",99,"^F",99,"^Y",0,"^Z",true,"^M",["^N",["^O",["^N",[[]]]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","~$d","^4","^4","^4"],"~:cljs.analyzer/constants",["^ ","~:seen",["^:",["~:warn","~:c","~:b","~:d","~:a","~:love"]],"~:order",["^15","^16","~:a","~:b","~:c","~:d"]],"~:doc",null]